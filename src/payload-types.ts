/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    media: Media;
    projects: Project;
    'project-types': ProjectType;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: string;
  title: string;
  slug: string;
  logo?: string | Media | null;
  icon?: string | Media | null;
  url?: string | null;
  twitter?: string | null;
  type: string | ProjectType;
  publishedDate?: string | null;
  launchDate?: string | null;
  retiredDate?: string | null;
  tagline: string;
  description: {
    [k: string]: unknown;
  }[];
  backgroundColor?: string | null;
  accentColor?: string | null;
  textColor?: string | null;
  linkColor?: string | null;
  blocks?:
    | (
        | {
            image: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'image';
          }
        | {
            text: {
              [k: string]: unknown;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            url: string;
            caption?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'video';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "project-types".
 */
export interface ProjectType {
  id: string;
  title: string;
  icon: string | Media;
  backgroundColor: string;
  accentColor: string;
  textColor: string;
  linkColor: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}